package vistas;

import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Sesion;
import modelo.UsuarioDao;
import modelo.Usuarios;
import reportes.ExcelUsuarios;

/**
 *
 * @author ramir
 */
public class PanelUsuarios extends javax.swing.JPanel {
    Sesion sesion = new Sesion();
    
    FrmUsuario fUsuario = new FrmUsuario();
    UsuarioDao uDao = new UsuarioDao();
    DefaultTableModel modelo = new DefaultTableModel();
    
    public PanelUsuarios() {
        if (Sesion.usuarioAutenticado == null || !"ADMIN".equals(Sesion.usuarioAutenticado.getRol())) {
            // Ocultar el panel si no es admin
            setVisible(false);
            System.out.println("Acceso denegado: Solo los administradores pueden ver este panel.");
            return; // Salir del constructor
        }
        initComponents();
        listarUsuarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnEliminarUsuario = new javax.swing.JButton();
        btnExcelUsuario = new javax.swing.JButton();
        btnNuevoUsuario = new javax.swing.JButton();

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_usuario", "Usuario", "Contraseña", "Rol"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        btnEliminarUsuario.setText("Eliminar");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        btnExcelUsuario.setText("Excel");
        btnExcelUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelUsuarioActionPerformed(evt);
            }
        });

        btnNuevoUsuario.setText("Nuevo");
        btnNuevoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btnEliminarUsuario)
                        .addGap(29, 29, 29)
                        .addComponent(btnExcelUsuario)
                        .addGap(79, 79, 79)
                        .addComponent(btnNuevoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarUsuario)
                    .addComponent(btnExcelUsuario)
                    .addComponent(btnNuevoUsuario))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked

        if (evt.getClickCount() == 2) {

            FrmUsuario fUsuario = new FrmUsuario(this); // Pasar la referencia de FrmSistema

            // Obtener la fila seleccionada
            int fila = tblUsuarios.rowAtPoint(evt.getPoint());

            // Verificar que la fila seleccionada sea válida
            if (fila >= 0 && fila < tblUsuarios.getRowCount()) {
                // Obtener valores de las celdas
                int id_usuario = Integer.parseInt(String.valueOf(tblUsuarios.getValueAt(fila, 0)));
                String usuario = String.valueOf(tblUsuarios.getValueAt(fila, 1));
                String contrasenia = String.valueOf(tblUsuarios.getValueAt(fila, 2));
                String rol = String.valueOf(tblUsuarios.getValueAt(fila, 3));

                // Crear instancia de Usuarios y configurar los valores
                Usuarios usu = new Usuarios();
                usu.setId_usuario(id_usuario);
                usu.setUsuario(usuario);
                usu.setContrasenia(contrasenia);
                usu.setRol(rol);

                // Configurar los valores en el formulario
                fUsuario.setUsuario(usu);

                // Mostrar el formulario (si ya estaba abierto, lo trae al frente)
                fUsuario.setVisible(true);
                fUsuario.toFront();
            }
        }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        int pregunta = JOptionPane.showConfirmDialog(null, "¿Estás seguro de eliminar?");
        if (pregunta == JOptionPane.YES_OPTION) {
            int filaSeleccionada = tblUsuarios.getSelectedRow();
            if (filaSeleccionada != -1) {
                int id = (int) tblUsuarios.getValueAt(filaSeleccionada, 0); // Suponiendo que el ID está en la primera columna
                modelo.removeRow(filaSeleccionada); // Eliminar la fila de la tabla
                uDao.EliminarUsuario(id); // Llamar al método para eliminar la entrada de la base de datos
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, selecciona una entrada para eliminar.");
            }
        }
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnExcelUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelUsuarioActionPerformed
        ExcelUsuarios.reporte(tblUsuarios);
    }//GEN-LAST:event_btnExcelUsuarioActionPerformed

    private void btnNuevoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoUsuarioActionPerformed
        FrmUsuario fUsuario = new FrmUsuario(this); // Pasar la referencia de FrmSistema
        fUsuario.setVisible(true);
    }//GEN-LAST:event_btnNuevoUsuarioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnExcelUsuario;
    private javax.swing.JButton btnNuevoUsuario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUsuarios;
    // End of variables declaration//GEN-END:variables

    public void listarUsuarios() {
        List<Usuarios> listarUsu = uDao.listarUsuarios();
        Collections.sort(listarUsu, Comparator.comparing(Usuarios::getId_usuario).reversed());
        modelo = (DefaultTableModel) tblUsuarios.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
        tblUsuarios.setRowSorter(sorter);
        modelo.setRowCount(0); // Limpiar el modelo antes de agregar nuevas filas
        for (int i = 0; i < listarUsu.size(); i++) {
            Object[] obj = new Object[4];
            obj[0] = listarUsu.get(i).getId_usuario();
            obj[1] = listarUsu.get(i).getUsuario();
            obj[2] = listarUsu.get(i).getContrasenia();
            obj[3] = listarUsu.get(i).getRol();
            modelo.addRow(obj);
        }
        tblUsuarios.setModel(modelo); // Establecer el modelo después de agregar todas las filas
    }

    public void limpiarUsuarios() {
        DefaultTableModel modelo = (DefaultTableModel) tblUsuarios.getModel();
        modelo.setRowCount(0);
    }
}
