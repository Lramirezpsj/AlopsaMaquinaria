package vistas;

import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Maquina;
import modelo.MaquinaDao;

/**
 *
 * @author ramir
 */
public class PanelMaquinas extends javax.swing.JPanel {

    FrmMaquina fMaquina = new FrmMaquina();
    MaquinaDao mDao = new MaquinaDao();
    DefaultTableModel modelo = new DefaultTableModel();

    public PanelMaquinas() {
        initComponents();
        listarMaquinas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEliminarMaquina = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMaquinas = new javax.swing.JTable();
        btnNuevaMaquina = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(790, 560));

        btnEliminarMaquina.setText("Eliminar");
        btnEliminarMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMaquinaActionPerformed(evt);
            }
        });

        tblMaquinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id_maquina", "Máquina"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMaquinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMaquinasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMaquinas);
        if (tblMaquinas.getColumnModel().getColumnCount() > 0) {
            tblMaquinas.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblMaquinas.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        btnNuevaMaquina.setText("Nuevo");
        btnNuevaMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaMaquinaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnEliminarMaquina)
                        .addGap(18, 18, 18)
                        .addComponent(btnNuevaMaquina)))
                .addContainerGap(422, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarMaquina)
                    .addComponent(btnNuevaMaquina))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaMaquinaActionPerformed
        FrmMaquina fMaquina = new FrmMaquina(this);
        fMaquina.setVisible(true);
    }//GEN-LAST:event_btnNuevaMaquinaActionPerformed

    private void tblMaquinasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMaquinasMouseClicked
        if (evt.getClickCount() == 2) { // Verificar si fue un doble clic
            FrmMaquina fMaquina = new FrmMaquina(this); // Crear instancia del formulario

            // Obtener la fila seleccionada
            int fila = tblMaquinas.rowAtPoint(evt.getPoint());

            // Verificar que la fila seleccionada sea válida
            if (fila >= 0 && fila < tblMaquinas.getRowCount()) {
                // Obtener valores de las celdas
                int id_maquina = Integer.parseInt(String.valueOf(tblMaquinas.getValueAt(fila, 0)));

                String maquina = String.valueOf(tblMaquinas.getValueAt(fila, 1));

                // Crear instancia de Horometros y configurar los valores
                Maquina mqn = new Maquina();
                mqn.setId_maquina(id_maquina);
                mqn.setMaquina(maquina);

                // Configurar los valores en el formulario
                fMaquina.setMaquina(mqn);

                // Mostrar el formulario (si ya estaba abierto, lo trae al frente)
                fMaquina.setVisible(true);
                fMaquina.toFront();
            }
        }
    }//GEN-LAST:event_tblMaquinasMouseClicked

    private void btnEliminarMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMaquinaActionPerformed
        int pregunta = JOptionPane.showConfirmDialog(null, "¿Estás seguro de eliminar?");
        if (pregunta == JOptionPane.YES_OPTION) {
            int filaSeleccionada = tblMaquinas.getSelectedRow();
            if (filaSeleccionada != -1) {
                int id = (int) tblMaquinas.getValueAt(filaSeleccionada, 0); // Suponiendo que el ID está en la primera columna
                modelo.removeRow(filaSeleccionada); // Eliminar la fila de la tabla
                mDao.EliminarMaquina(id); // Llamar al método para eliminar la entrada de la base de datos
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, selecciona una máquina para eliminar.");
            }
        }
    }//GEN-LAST:event_btnEliminarMaquinaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarMaquina;
    private javax.swing.JButton btnNuevaMaquina;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMaquinas;
    // End of variables declaration//GEN-END:variables

    public void listarMaquinas() {
        List<Maquina> listarMqn = mDao.listarMaquinas();
        Collections.sort(listarMqn, Comparator.comparing(Maquina::getId_maquina).reversed());
        modelo = (DefaultTableModel) tblMaquinas.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
        tblMaquinas.setRowSorter(sorter);
        modelo.setRowCount(0); // Limpiar el modelo antes de agregar nuevas filas
        for (int i = 0; i < listarMqn.size(); i++) {
            Object[] obj = new Object[2];
            obj[0] = listarMqn.get(i).getId_maquina();
            obj[1] = listarMqn.get(i).getMaquina();
            modelo.addRow(obj);
        }
        tblMaquinas.setModel(modelo); // Establecer el modelo después de agregar todas las filas
    }
}
